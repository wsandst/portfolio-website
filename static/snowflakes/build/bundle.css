html{height:100%;background-color:#202020;color:#fff}body{margin:0;height:100%}main.svelte-1ujn8gi{display:block;height:100%;width:100%}button.svelte-1ujn8gi{all:unset;padding:0.5em}input[type='number'].svelte-1ujn8gi{all:unset;border:1px;border-style:solid;border-radius:8px;border-color:grey;padding:0.15em;padding-left:0.5em;padding-right:0.5em;width:55px;-moz-appearance:textfield}input.svelte-1ujn8gi::-webkit-outer-spin-button,input.svelte-1ujn8gi::-webkit-inner-spin-button{-webkit-appearance:none}#column.svelte-1ujn8gi{width:50%;height:100%;margin:0 auto;display:flex;flex-direction:column;justify-content:center;align-items:center;gap:10px}#siminfo.svelte-1ujn8gi{white-space:pre;font-family:monospace;padding-top:0;display:block;text-align:center;display:flex;flex-direction:column;gap:10px}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXBwLnN2ZWx0ZSIsInNvdXJjZXMiOlsiQXBwLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2NyaXB0PlxuXHRpbXBvcnQgRGlzcGxheSBmcm9tICcuL0Rpc3BsYXkuc3ZlbHRlJ1xuXHRpbXBvcnQgeyBvbk1vdW50IH0gZnJvbSAnc3ZlbHRlJztcblx0aW1wb3J0IEZhIGZyb20gJ3N2ZWx0ZS1mYSdcblx0aW1wb3J0IHsgZmFQYXVzZSwgZmFQbGF5LCBmYURvd25sb2FkIH0gZnJvbSAnQGZvcnRhd2Vzb21lL2ZyZWUtc29saWQtc3ZnLWljb25zJ1xuXHRcblx0ZXhwb3J0IGxldCBzbm93Zmxha2VTaW1MaWI7XG5cdGxldCBzaW1DdHg7XG5cdGxldCBkaXNwbGF5O1xuXHRsZXQgc2ltUnVubmluZyA9IGZhbHNlO1xuXHRsZXQgaXRlcmF0aW9uQ291bnQgPSAwO1xuXG5cdGxldCBzaW1XaWR0aCA9IDEwMDtcblx0bGV0IHNpbUhlaWdodCA9IDEwMDtcblx0bGV0IHNpbUFscGhhID0gMS4wO1xuXHRsZXQgc2ltQmV0YSA9IDAuNDtcblx0bGV0IHNpbUdhbW1hID0gMC4wMDAxO1xuXHRcblx0b25Nb3VudCgoKSA9PiB7XG5cdFx0Ly8gU3RhcnQgcmVuZGVyIGxvb3Bcblx0XHRwYXJzZVVSTFBhcmFtcygpO1xuXHRcdGluaXRTaW0oKTtcblx0XHRzaW11bGF0aW9uTG9vcCgpO1xuXHR9KTtcblxuXHRmdW5jdGlvbiBzaW11bGF0aW9uTG9vcCgpIHtcblx0XHRkaXNwbGF5LnJlbmRlckZyYW1lKCk7XG5cdFx0c3RlcFNpbSgpO1xuXHRcdGlmIChzaW1SdW5uaW5nKSB7XG5cdFx0XHRyZXF1ZXN0QW5pbWF0aW9uRnJhbWUoc2ltdWxhdGlvbkxvb3ApO1xuXHRcdH1cblx0fVxuXG5cdGZ1bmN0aW9uIHN0ZXBTaW0oKSB7XG5cdFx0c2ltQ3R4LnN0ZXBfc2ltdWxhdGlvbigpO1xuXHRcdHNpbUN0eC51cGRhdGVfdmVydGV4X2NvbG9ycygpO1xuXHRcdGRpc3BsYXkudXBkYXRlQ29sb3JCdWZmZXIoc2ltQ3R4LmdldF92ZXJ0ZXhfY29sb3JzKCkpO1xuXHRcdGl0ZXJhdGlvbkNvdW50ICs9IDE7XG5cdH1cblxuXHRmdW5jdGlvbiB0b2dnbGVTaW0oKSB7XG5cdFx0c2ltUnVubmluZyA9ICFzaW1SdW5uaW5nO1xuXHRcdGlmIChzaW1SdW5uaW5nKSB7XG5cdFx0XHRyZXF1ZXN0QW5pbWF0aW9uRnJhbWUoc2ltdWxhdGlvbkxvb3ApO1xuXHRcdH1cblx0fVxuXG5cdGZ1bmN0aW9uIGluaXRTaW0oKSB7XG5cdFx0c2ltQ3R4ID0gc25vd2ZsYWtlU2ltTGliLlNub3dmbGFrZVNpbUNvbnRleHQubmV3KHNpbVdpZHRoLCBzaW1IZWlnaHQsIHNpbUFscGhhLCBzaW1CZXRhLCBzaW1HYW1tYSk7XG5cdFx0c2ltQ3R4LnNldF9jZWxsKHNpbVdpZHRoIC8gMiArIDEsIHNpbUhlaWdodCAvIDIsIDEuMCk7XG5cdFx0c2ltQ3R4LnN0ZXBfc2ltdWxhdGlvbigpO1xuXHRcdHNpbUN0eC5jcmVhdGVfdmVydGV4X3Bvc2l0aW9ucygpO1xuXHRcdHNpbUN0eC51cGRhdGVfdmVydGV4X2NvbG9ycygpO1xuXHRcdGRpc3BsYXkuc2V0U2ltU2l6ZShzaW1XaWR0aCwgc2ltSGVpZ2h0KTtcblx0XHRkaXNwbGF5LnVwZGF0ZVBvc2l0aW9uQnVmZmVyKHNpbUN0eC5nZXRfdmVydGV4X3Bvc2l0aW9ucygpKTtcblx0XHRkaXNwbGF5LnVwZGF0ZUNvbG9yQnVmZmVyKHNpbUN0eC5nZXRfdmVydGV4X2NvbG9ycygpKTtcblx0fVxuXG5cdGZ1bmN0aW9uIHRpbWVTaW0oKSB7XG5cdFx0Y29uc29sZS5sb2coXCJTdGFydGluZyBzaW11bGF0aW9uIHRpbWluZ1wiKTtcblx0XHRsZXQgc3RhcnRUaW1lID0gcGVyZm9ybWFuY2Uubm93KCk7XG5cblx0XHRmb3IgKGxldCBpID0gMDsgaSA8IDEwMDA7IGkrKykge1xuXHRcdFx0c2ltQ3R4LnN0ZXBfc2ltdWxhdGlvbigpO1xuXHRcdH1cblxuXHRcdGxldCBlbmRUaW1lID0gcGVyZm9ybWFuY2Uubm93KCk7XG5cdFx0bGV0IGVsYXBzZWRUaW1lID0gZW5kVGltZSAtIHN0YXJ0VGltZVxuXHRcdGNvbnNvbGUubG9nKGBTaW11bGF0aW9uIHRvb2sgJHtlbGFwc2VkVGltZS50b0ZpeGVkKDIpfSBtcyAoJHsoZWxhcHNlZFRpbWUgLyAxMDAwKS50b0ZpeGVkKDIpfSBtcylgKTtcblx0fVxuXG5cdGZ1bmN0aW9uIHBhcnNlVVJMUGFyYW1zKCkge1xuXHRcdGNvbnN0IHVybFBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMobG9jYXRpb24uc2VhcmNoKTtcblx0XHRpZiAodXJsUGFyYW1zLmdldChcInNpemVcIikgIT0gbnVsbCkge1xuXHRcdFx0bGV0IHNpemUgPSB1cmxQYXJhbXMuZ2V0KFwic2l6ZVwiKS5zcGxpdChcInhcIik7XG5cdFx0XHRzaW1XaWR0aCA9IHNpemVbMF07XG5cdFx0XHRzaW1IZWlnaHQgPSBzaXplWzFdO1xuXHRcdH1cdFxuXHR9XG5cblx0JDogaWYgKHNpbUN0eCkgc2ltQ3R4LnNldF9hbHBoYShzaW1BbHBoYSk7XG5cdCQ6IGlmIChzaW1DdHgpIHNpbUN0eC5zZXRfYmV0YShzaW1CZXRhKTtcblx0JDogaWYgKHNpbUN0eCkgc2ltQ3R4LnNldF9nYW1tYShzaW1HYW1tYSk7XG5cdFxuPC9zY3JpcHQ+XG5cbjxzdmVsdGU6aGVhZD5cblx0PHRpdGxlPlNub3dmbGFrZSBTaW11bGF0aW9uPC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG5cbjxtYWluID5cblx0PGRpdiBpZD1cImNvbHVtblwiPlxuXHRcdDxkaXYgaWQ9XCJzaW1pbmZvXCI+XG5cdFx0XHQ8ZGl2PlxuXHRcdFx0XHRJdGVyYXRpb246IHtpdGVyYXRpb25Db3VudH0gXG5cdFx0XHQ8L2Rpdj5cblx0XHRcdDxkaXY+XG5cdFx0XHRcdDxub2JyPlxuXHRcdFx0XHRcdM6xOiA8aW5wdXQgdHlwZT1cIm51bWJlclwiIGJpbmQ6dmFsdWU9e3NpbUFscGhhfT4gICAgXG5cdFx0XHRcdFx0zrI6IDxpbnB1dCB0eXBlPVwibnVtYmVyXCIgYmluZDp2YWx1ZT17c2ltQmV0YX0+XG5cdFx0XHRcdFx0zrM6IDxpbnB1dCB0eXBlPVwibnVtYmVyXCIgYmluZDp2YWx1ZT17c2ltR2FtbWF9PlxuXHRcdFx0XHQ8L25vYnI+XG5cdFx0XHQ8L2Rpdj5cblx0XHQ8L2Rpdj5cblx0XHQ8RGlzcGxheSBiaW5kOnRoaXM9e2Rpc3BsYXl9PjwvRGlzcGxheT5cblx0XHQ8ZGl2PlxuXHRcdDxidXR0b24gb246Y2xpY2s9e3RvZ2dsZVNpbX0+XG5cdFx0XHR7I2lmICFzaW1SdW5uaW5nfVxuXHRcdFx0XHQ8RmEgaWNvbj17ZmFQbGF5fSBzaXplPVwiMS41eFwiIGNvbG9yPVwid2hpdGVcIiAvPlxuXHRcdFx0ezplbHNlfVxuXHRcdFx0XHQ8RmEgaWNvbj17ZmFQYXVzZX0gc2l6ZT1cIjEuNXhcIiBjb2xvcj1cIndoaXRlXCIgLz5cblx0XHRcdHsvaWZ9XG5cdFx0PC9idXR0b24+XG5cdFx0PGJ1dHRvbiBvbjpjbGljaz17ZGlzcGxheS5zY3JlZW5zaG90KCl9PlxuXHRcdFx0PEZhIGljb249e2ZhRG93bmxvYWR9IHNpemU9XCIxLjV4XCIgY29sb3I9XCJ3aGl0ZVwiIC8+XG5cdFx0PC9idXR0b24+XG5cdFx0PC9kaXY+XG5cdDwvZGl2PlxuPC9tYWluPlxuXG48c3R5bGU+XG5cdDpnbG9iYWwoaHRtbCkge1xuXHRcdGhlaWdodDogMTAwJTtcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAjMjAyMDIwO1xuXHRcdGNvbG9yOiAjZmZmO1xuXHR9XG5cblx0Omdsb2JhbChib2R5KSB7XG5cdFx0bWFyZ2luOiAwO1xuICAgIFx0aGVpZ2h0OiAxMDAlO1xuXHR9XG5cblx0bWFpbiB7XG5cdFx0ZGlzcGxheTogYmxvY2s7XG5cdFx0aGVpZ2h0OiAxMDAlO1xuXHRcdHdpZHRoOiAxMDAlO1xuXHR9XG5cblx0YnV0dG9uIHtcblx0XHRhbGw6IHVuc2V0O1xuXHRcdHBhZGRpbmc6IDAuNWVtO1xuXHR9XG5cblx0aW5wdXRbdHlwZT0nbnVtYmVyJ10ge1xuXHRcdGFsbDp1bnNldDtcblx0XHRib3JkZXI6IDFweDtcblx0XHRib3JkZXItc3R5bGU6IHNvbGlkO1xuXHRcdGJvcmRlci1yYWRpdXM6IDhweDtcblx0XHRib3JkZXItY29sb3I6IGdyZXk7XG5cdFx0cGFkZGluZzogMC4xNWVtO1xuXHRcdHBhZGRpbmctbGVmdDogMC41ZW07XG5cdFx0cGFkZGluZy1yaWdodDogMC41ZW07XG5cdFx0d2lkdGg6IDU1cHg7XG5cdFx0LW1vei1hcHBlYXJhbmNlOnRleHRmaWVsZDtcblx0fVxuXG5cdGlucHV0Ojotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uLFxuXHRpbnB1dDo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbiB7XG5cdFx0LXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuXHR9XG5cblx0I2NvbHVtbiB7XG5cdFx0d2lkdGg6IDUwJTtcblx0XHRoZWlnaHQ6IDEwMCU7XG5cdFx0bWFyZ2luOiAwIGF1dG87XG5cdFx0ZGlzcGxheTogZmxleDtcblx0XHRmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXHRcdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXHRcdGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cdFx0Z2FwOiAxMHB4O1xuXHR9XG5cblx0I3NpbWluZm8ge1xuXHRcdHdoaXRlLXNwYWNlOiBwcmU7XG4gICAgICAgIGZvbnQtZmFtaWx5OiBtb25vc3BhY2U7XG4gICAgICAgIHBhZGRpbmctdG9wOiAwO1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcblx0XHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cdFx0ZGlzcGxheTogZmxleDtcblx0XHRmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXHRcdGdhcDogMTBweDtcblx0fVxuXG48L3N0eWxlPiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5SFMsSUFBSSxBQUFFLENBQUMsQUFDZCxNQUFNLENBQUUsSUFBSSxDQUNaLGdCQUFnQixDQUFFLE9BQU8sQ0FDekIsS0FBSyxDQUFFLElBQUksQUFDWixDQUFDLEFBRU8sSUFBSSxBQUFFLENBQUMsQUFDZCxNQUFNLENBQUUsQ0FBQyxDQUNOLE1BQU0sQ0FBRSxJQUFJLEFBQ2hCLENBQUMsQUFFRCxJQUFJLGVBQUMsQ0FBQyxBQUNMLE9BQU8sQ0FBRSxLQUFLLENBQ2QsTUFBTSxDQUFFLElBQUksQ0FDWixLQUFLLENBQUUsSUFBSSxBQUNaLENBQUMsQUFFRCxNQUFNLGVBQUMsQ0FBQyxBQUNQLEdBQUcsQ0FBRSxLQUFLLENBQ1YsT0FBTyxDQUFFLEtBQUssQUFDZixDQUFDLEFBRUQsS0FBSyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsZUFBQyxDQUFDLEFBQ3JCLElBQUksS0FBSyxDQUNULE1BQU0sQ0FBRSxHQUFHLENBQ1gsWUFBWSxDQUFFLEtBQUssQ0FDbkIsYUFBYSxDQUFFLEdBQUcsQ0FDbEIsWUFBWSxDQUFFLElBQUksQ0FDbEIsT0FBTyxDQUFFLE1BQU0sQ0FDZixZQUFZLENBQUUsS0FBSyxDQUNuQixhQUFhLENBQUUsS0FBSyxDQUNwQixLQUFLLENBQUUsSUFBSSxDQUNYLGdCQUFnQixTQUFTLEFBQzFCLENBQUMsQUFFRCxvQkFBSywyQkFBMkIsQ0FDaEMsb0JBQUssMkJBQTJCLEFBQUMsQ0FBQyxBQUNqQyxrQkFBa0IsQ0FBRSxJQUFJLEFBQ3pCLENBQUMsQUFFRCxPQUFPLGVBQUMsQ0FBQyxBQUNSLEtBQUssQ0FBRSxHQUFHLENBQ1YsTUFBTSxDQUFFLElBQUksQ0FDWixNQUFNLENBQUUsQ0FBQyxDQUFDLElBQUksQ0FDZCxPQUFPLENBQUUsSUFBSSxDQUNiLGNBQWMsQ0FBRSxNQUFNLENBQ3RCLGVBQWUsQ0FBRSxNQUFNLENBQ3ZCLFdBQVcsQ0FBRSxNQUFNLENBQ25CLEdBQUcsQ0FBRSxJQUFJLEFBQ1YsQ0FBQyxBQUVELFFBQVEsZUFBQyxDQUFDLEFBQ1QsV0FBVyxDQUFFLEdBQUcsQ0FDVixXQUFXLENBQUUsU0FBUyxDQUN0QixXQUFXLENBQUUsQ0FBQyxDQUNkLE9BQU8sQ0FBRSxLQUFLLENBQ3BCLFVBQVUsQ0FBRSxNQUFNLENBQ2xCLE9BQU8sQ0FBRSxJQUFJLENBQ2IsY0FBYyxDQUFFLE1BQU0sQ0FDdEIsR0FBRyxDQUFFLElBQUksQUFDVixDQUFDIn0= */.spin.svelte-1cj2gr0{animation:svelte-1cj2gr0-spin 2s 0s infinite linear}.pulse.svelte-1cj2gr0{animation:svelte-1cj2gr0-spin 1s infinite steps(8)}@keyframes svelte-1cj2gr0-spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmEuc3ZlbHRlIiwic291cmNlcyI6WyJmYS5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdD5cbmltcG9ydCB7XG4gIGpvaW5Dc3MsXG4gIGdldFN0eWxlcyxcbiAgZ2V0VHJhbnNmb3JtLFxufSBmcm9tICcuL3V0aWxzJztcblxubGV0IGNsYXp6ID0gJyc7XG5leHBvcnQgeyBjbGF6eiBhcyBjbGFzcyB9O1xuZXhwb3J0IGxldCBpZCA9ICcnO1xuZXhwb3J0IGxldCBzdHlsZSA9ICcnO1xuXG5leHBvcnQgbGV0IGljb247XG5cbmV4cG9ydCBsZXQgc2l6ZSA9ICcnO1xuZXhwb3J0IGxldCBjb2xvciA9ICcnO1xuXG5leHBvcnQgbGV0IGZ3ID0gZmFsc2U7XG5leHBvcnQgbGV0IHB1bGwgPSAnJztcblxuZXhwb3J0IGxldCBzY2FsZSA9IDE7XG5leHBvcnQgbGV0IHRyYW5zbGF0ZVggPSAwO1xuZXhwb3J0IGxldCB0cmFuc2xhdGVZID0gMDtcbmV4cG9ydCBsZXQgcm90YXRlID0gJyc7XG5leHBvcnQgbGV0IGZsaXAgPSBmYWxzZTtcblxuZXhwb3J0IGxldCBzcGluID0gZmFsc2U7XG5leHBvcnQgbGV0IHB1bHNlID0gZmFsc2U7XG5cbi8vIER1b3RvbmUgSWNvbnNcbmV4cG9ydCBsZXQgcHJpbWFyeUNvbG9yID0gJyc7XG5leHBvcnQgbGV0IHNlY29uZGFyeUNvbG9yID0gJyc7XG5leHBvcnQgbGV0IHByaW1hcnlPcGFjaXR5ID0gMTtcbmV4cG9ydCBsZXQgc2Vjb25kYXJ5T3BhY2l0eSA9IDAuNDtcbmV4cG9ydCBsZXQgc3dhcE9wYWNpdHkgPSBmYWxzZTtcblxubGV0IGk7XG5sZXQgYztcbmxldCBzO1xubGV0IHRyYW5zZm9ybTtcblxuJDogaSA9IChpY29uICYmIGljb24uaWNvbikgfHwgWzAsIDAsICcnLCBbXSwgJyddO1xuXG4kOiBjID0gam9pbkNzcyhcbiAgW1xuICAgIGNsYXp6LFxuICAgICdzdmVsdGUtZmEnLFxuICAgIHNwaW4gJiYgJ3NwaW4nLFxuICAgIHB1bHNlICYmICdwdWxzZScsXG4gIF0sXG4gICcgJyxcbik7XG5cbiQ6IHMgPSBnZXRTdHlsZXMoc3R5bGUsIHNpemUsIHB1bGwsIGZ3KTtcblxuJDogdHJhbnNmb3JtID0gZ2V0VHJhbnNmb3JtKHNjYWxlLCB0cmFuc2xhdGVYLCB0cmFuc2xhdGVZLCByb3RhdGUsIGZsaXAsIDUxMik7XG48L3NjcmlwdD5cblxuPHN0eWxlPlxuLnNwaW4ge1xuICBhbmltYXRpb246IHNwaW4gMnMgMHMgaW5maW5pdGUgbGluZWFyO1xufVxuXG4ucHVsc2Uge1xuICBhbmltYXRpb246IHNwaW4gMXMgaW5maW5pdGUgc3RlcHMoOCk7XG59XG5cbkBrZXlmcmFtZXMgc3BpbiB7XG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcbiAgfVxuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xuICB9XG59XG48L3N0eWxlPlxuXG57I2lmIGlbNF19XG4gIDxzdmdcbiAgICB7aWR9XG4gICAgY2xhc3M9e2N9XG4gICAgc3R5bGU9e3N9XG4gICAgdmlld0JveD17YDAgMCAke2lbMF19ICR7aVsxXX1gfVxuICAgIGFyaWEtaGlkZGVuPVwidHJ1ZVwiXG4gICAgcm9sZT1cImltZ1wiXG4gICAgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXG4gID5cbiAgICA8Z1xuICAgICAgdHJhbnNmb3JtPXtgdHJhbnNsYXRlKCR7aVswXSAvIDJ9ICR7aVsxXSAvIDJ9KWB9XG4gICAgICB0cmFuc2Zvcm0tb3JpZ2luPXtgJHtpWzBdIC8gNH0gMGB9XG4gICAgPlxuICAgICAgPGcge3RyYW5zZm9ybX0+XG4gICAgICAgIHsjaWYgdHlwZW9mIGlbNF0gPT0gJ3N0cmluZyd9XG4gICAgICAgICAgPHBhdGhcbiAgICAgICAgICAgIGQ9e2lbNF19XG4gICAgICAgICAgICBmaWxsPXtjb2xvciB8fCBwcmltYXJ5Q29sb3IgfHwgJ2N1cnJlbnRDb2xvcid9XG4gICAgICAgICAgICB0cmFuc2Zvcm09e2B0cmFuc2xhdGUoJHtpWzBdIC8gLTJ9ICR7aVsxXSAvIC0yfSlgfVxuICAgICAgICAgIC8+XG4gICAgICAgIHs6ZWxzZX1cbiAgICAgICAgICA8cGF0aFxuICAgICAgICAgICAgZD17aVs0XVswXX1cbiAgICAgICAgICAgIGZpbGw9e3NlY29uZGFyeUNvbG9yIHx8IGNvbG9yIHx8ICdjdXJyZW50Q29sb3InfVxuICAgICAgICAgICAgZmlsbC1vcGFjaXR5PXtzd2FwT3BhY2l0eSAhPSBmYWxzZSA/IHByaW1hcnlPcGFjaXR5IDogc2Vjb25kYXJ5T3BhY2l0eX1cbiAgICAgICAgICAgIHRyYW5zZm9ybT17YHRyYW5zbGF0ZSgke2lbMF0gLyAtMn0gJHtpWzFdIC8gLTJ9KWB9XG4gICAgICAgICAgLz5cbiAgICAgICAgICA8cGF0aFxuICAgICAgICAgICAgZD17aVs0XVsxXX1cbiAgICAgICAgICAgIGZpbGw9e3ByaW1hcnlDb2xvciB8fCBjb2xvciB8fCAnY3VycmVudENvbG9yJ31cbiAgICAgICAgICAgIGZpbGwtb3BhY2l0eT17c3dhcE9wYWNpdHkgIT0gZmFsc2UgPyBzZWNvbmRhcnlPcGFjaXR5IDogcHJpbWFyeU9wYWNpdHl9XG4gICAgICAgICAgICB0cmFuc2Zvcm09e2B0cmFuc2xhdGUoJHtpWzBdIC8gLTJ9ICR7aVsxXSAvIC0yfSlgfVxuICAgICAgICAgIC8+XG4gICAgICAgIHsvaWZ9XG4gICAgICA8L2c+XG4gICAgPC9nPlxuICA8L3N2Zz5cbnsvaWZ9XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMkRBLEtBQUssZUFBQyxDQUFDLEFBQ0wsU0FBUyxDQUFFLG1CQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsTUFBTSxBQUN2QyxDQUFDLEFBRUQsTUFBTSxlQUFDLENBQUMsQUFDTixTQUFTLENBQUUsbUJBQUksQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEFBQ3RDLENBQUMsQUFFRCxXQUFXLG1CQUFLLENBQUMsQUFDZixFQUFFLEFBQUMsQ0FBQyxBQUNGLFNBQVMsQ0FBRSxPQUFPLElBQUksQ0FBQyxBQUN6QixDQUFDLEFBQ0QsSUFBSSxBQUFDLENBQUMsQUFDSixTQUFTLENBQUUsT0FBTyxNQUFNLENBQUMsQUFDM0IsQ0FBQyxBQUNILENBQUMifQ== */@media only screen and (max-width: 480px){canvas.svelte-1e74k2u{width:340px;height:340px}}@media only screen and (min-width: 480px){canvas.svelte-1e74k2u{width:500px;height:500px}}@media only screen and (min-width: 1020px){canvas.svelte-1e74k2u{width:650px;height:650px}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */